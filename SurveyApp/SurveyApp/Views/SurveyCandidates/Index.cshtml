@model IEnumerable<SurveyApp.Models.SurveyCandidate>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Candidate.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Survey.SurveyName)
        </th>
        @* SurveyQuesNo to be added during taking survey only
            <th>
            @Html.DisplayNameFor(model => model.SurveyQuesNo)
        </th>*@
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Candidate.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Survey.SurveyName)
        </td>
        @*<td>
            @Html.DisplayFor(modelItem => item.SurveyQuesNo)
        </td>*@
        <td>
            @* We don't want to edit Survey Question
            @Html.ActionLink("Edit", "Edit", new { SurveyId= item.SurveyId, CandidateId=item.CandidateId }) | @* way to handle composite primary key*@ 

            @Html.ActionLink("Details", "Details", new { SurveyId = item.SurveyId, CandidateId = item.CandidateId }) |
            @Html.ActionLink("Delete", "Delete", new { SurveyId = item.SurveyId, CandidateId = item.CandidateId })
        </td>
    </tr>
}

</table>
